name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod

      - name: Build Binary
        run: |
          BINARY_NAME="terragrunt-runner-${{ matrix.goos }}-${{ matrix.goarch }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -o $BINARY_NAME -ldflags "-X main.Version=${GITHUB_REF#refs/tags/} -X main.Commit=$(git rev-parse --short HEAD) -X main.BuildTime=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terragrunt-runner-${{ matrix.goos }}-${{ matrix.goarch }}
          path: terragrunt-runner-*

  release:
    runs-on: ubuntu-latest
    needs: build
    # Only create releases for specific version tags (v1.0.0), not major version tags (v1)
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref_name, '.') && !contains(github.ref_name, '-')
    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v4
        with:
          pattern: terragrunt-runner-*
          path: binaries

      - name: Create Release
        uses: softprops/action-gh-release@62c96d0c4e8a889135c1f3a25910db8dbe0e85f7 # v2.3.4
        with:
          files: binaries/**/*
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          overwrite_files: false

  update-major-release:
    runs-on: ubuntu-latest
    needs: release
    # Only run for version tags like v1.0.0 (not for v1, v2, etc.)
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref_name, '.') && !contains(github.ref_name, '-')
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract major version
        id: version
        run: |
          VERSION="${{ github.ref_name }}"
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR" >> $GITHUB_OUTPUT

      - name: Update major version tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Update the major version tag to point to this release
          git tag -f "${{ steps.version.outputs.major }}" "${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.major }}" --force || true

      - uses: actions/download-artifact@v4
        with:
          pattern: terragrunt-runner-*
          path: binaries

      - name: Create or update major version release
        run: |
          MAJOR="${{ steps.version.outputs.major }}"
          VERSION="${{ steps.version.outputs.version }}"

          # Delete existing major version release if it exists
          gh release delete "$MAJOR" --yes || true

          # Create new major version release as pre-release (so it doesn't show as "Latest")
          gh release create "$MAJOR" \
            --title "$MAJOR" \
            --notes "Latest ${MAJOR}.x.x release (currently $VERSION)

          This is a rolling release tag that always points to the latest ${MAJOR}.x.x version.

          **Current version:** $VERSION

          For production use, pin to a specific version like \`boogy/terragrunt-runner@$VERSION\`." \
            --prerelease \
            binaries/**/*
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Output result
        run: |
          echo "âœ… Updated ${{ steps.version.outputs.major }} tag and release to point to ${{ steps.version.outputs.version }}"
          echo "Users can now use @${{ steps.version.outputs.major }} which will resolve to ${{ steps.version.outputs.version }}"
